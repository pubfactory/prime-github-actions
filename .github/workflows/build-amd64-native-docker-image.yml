############################################################################################
# Workflow that checks out code, builds, and pushes a native docker image
#
# By: JGF
############################################################################################

name: Build AMD64 Native Image

on:
    workflow_call:
      secrets:
        MAVEN_SETTINGS:
          required: true
        DOCKERHUB_USERNAME:
          required: true
        DOCKERHUB_PASSWORD:
          required: true
        SLACK_WEBHOOK:
          required: true
        JAVA_DISTRIBUTION:
          required: true
        JAVA_VERSION:
          required: true
        GRAALVM_VERSION:
          required: true


jobs:

    build-native-image:

      runs-on: ubuntu-latest

      steps:
        - name: Set Git Branch
          if: github.event.action == 'upstream-job-success'
          run: |
            echo "Recieved upstream-job-success message from ${{ github.event.client_payload.repository }} on branch ${{ github.event.client_payload.branch }}"
            echo "GITHUB_REF_NAME=${{ github.event.client_payload.branch }}" >> $GITHUB_ENV

        - name: Checkout Repository
          uses: actions/checkout@v2
          with:
            ref: $GITHUB_REF_NAME

        - name: Cache Maven packages
          uses: actions/cache@v2
          with:
            path: ~/.m2/repository
            key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
            restore-keys: |
                ${{ runner.os }}-maven-

        - name: Set up JDK ${{ secrets.JAVA_VERSION }}
          uses: actions/setup-java@v2
          with:
            java-version: ${{ secrets.JAVA_VERSION }}
            distribution: ${{ secrets.JAVA_DISTRIBUTION }}
            cache: maven

        - name: Set up GraalVm
          uses: rinx/setup-graalvm-ce@v0.0.5
          with:
            graalvm-version: ${{ secrets.GRAALVM_VERSION }}
            java-version: java${{ secrets.JAVA_VERSION }}

        - name: Log into docker
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_PASSWORD }}

        - name: Set up Docker Buildx
          id: buildx
          uses: docker/setup-buildx-action@v1

        - name: Override maven settings.xml
          run: |
              echo $MAVEN_SETTINGS > ~/.m2/settings.xml
          shell: bash
          env:
              MAVEN_SETTINGS: ${{ secrets.MAVEN_SETTINGS }}

        - name: Maven build navite binary
          run: mvn package -DskipTests -Pnative

        - name: Build docker image
          run: |
            git_hash=$(git rev-parse --short "$GITHUB_SHA")
            docker build -f src/main/docker/Dockerfile.native -t $GITHUB_REPOSITORY:$GITHUB_REF_NAME-latest -t $GITHUB_REPOSITORY:$GITHUB_REF_NAME-$git_hash .
            docker push $GITHUB_REPOSITORY:$GITHUB_REF_NAME-latest
            docker push $GITHUB_REPOSITORY:$GITHUB_REF_NAME-$git_hash

        - name: Notify Slack on Failure
          if: ${{ failure() }}
          uses: rtCamp/action-slack-notify@v2
          env:
            SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
            SLACK_USERNAME: 'GitBot'
            SLACK_COLOR: ${{ job.status }}
            SLACK_TITLE: 'Build Failure'

        - name: Notify Slack on Success
          if: ${{ success() }}
          uses: rtCamp/action-slack-notify@v2
          env:
            SLACK_CHANNEL: 'prime-chatops'
            SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
            SLACK_USERNAME: 'GitBot'
            SLACK_COLOR: ${{ job.status }}
            SLACK_TITLE: 'Build Success'